{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Set up"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "#import libraries \n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt \n",
    "import simfin as sf\n",
    "from simfin.names import *\n",
    "from IPython.display import display\n",
    "import datetime\n",
    "%matplotlib inline\n",
    "\n",
    "#set the local directory where data-files are stored\n",
    "sf.set_data_dir('C:/Users/think/Desktop/UVA/2020Spring/STAT_4996_Capstone/simfin_data/')\n",
    "\n",
    "# 一个cell显示所有output\n",
    "from IPython.core.interactiveshell import InteractiveShell\n",
    "InteractiveShell.ast_node_interactivity = 'all'\n",
    "\n",
    "# Set up API key\n",
    "sf.set_api_key(api_key='free')\n",
    "\n",
    "# Seaborn set plotting style.\n",
    "sns.set_style(\"whitegrid\")\n",
    "\n",
    "#display all columns\n",
    "pd.set_option('display.max_columns', None)\n",
    "pd.set_option('display.max_rows', None)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Define functions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "#calculate the proportion of non-missing value in each column\n",
    "def prop_nonmissing(df):\n",
    "    df2 = df.reset_index().copy()\n",
    "    output = pd.DataFrame(index = df2.columns)\n",
    "    nomiss_prop = []\n",
    "    for c in df2.columns:\n",
    "        nomiss_prop.append(round((1-(df2.loc[:,c].isnull().sum()/len(df2.loc[:,c])))*100,2))\n",
    "    output['Prop'] = nomiss_prop\n",
    "    return output"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Loading Data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## income statement"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Dataset \"us-income-annual\" on disk (0 days old).\n",
      "- Loading from disk ... Done!\n",
      "Dataset \"us-income-banks-annual\" on disk (0 days old).\n",
      "- Loading from disk ... Done!\n",
      "Dataset \"us-balance-insurance-annual\" on disk (0 days old).\n",
      "- Loading from disk ... Done!\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "\"\\n#load quarter data\\ndf_income_q = sf.load_income(variant='quarterly', market='us')\\ndf_income_q_bank  = sf.load_income_banks(variant='quarterly', market='us')\\ndf_income_q_ins = df = sf.load_balance_insurance(variant='quarterly', market='us')\\n\\n#load ttm data\\ndf_income_ttm = sf.load_income(variant='ttm', market='us')\\ndf_income_ttm_bank  = sf.load_income_banks(variant='ttm', market='us')\\ndf_income_ttm_ins = df = sf.load_balance_insurance(variant='ttm', market='us')\\n\""
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#load in entire annual income statement data\n",
    "df_income_a = sf.load_income(variant='annual', market='us').reset_index()\n",
    "#banks only\n",
    "df_income_a_bank  = sf.load_income_banks(variant='annual', market='us').reset_index()\n",
    "#insurance companies only\n",
    "df_income_a_ins = df = sf.load_balance_insurance(variant='annual', market='us').reset_index()\n",
    "\n",
    "\"\"\"\n",
    "#load quarter data\n",
    "df_income_q = sf.load_income(variant='quarterly', market='us')\n",
    "df_income_q_bank  = sf.load_income_banks(variant='quarterly', market='us')\n",
    "df_income_q_ins = df = sf.load_balance_insurance(variant='quarterly', market='us')\n",
    "\n",
    "#load ttm data\n",
    "df_income_ttm = sf.load_income(variant='ttm', market='us')\n",
    "df_income_ttm_bank  = sf.load_income_banks(variant='ttm', market='us')\n",
    "df_income_ttm_ins = df = sf.load_balance_insurance(variant='ttm', market='us')\n",
    "\"\"\""
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## balance sheet"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Dataset \"us-balance-annual\" on disk (0 days old).\n",
      "- Loading from disk ... Done!\n",
      "Dataset \"us-balance-banks-annual\" on disk (0 days old).\n",
      "- Loading from disk ... Done!\n",
      "Dataset \"us-balance-insurance-annual\" on disk (0 days old).\n",
      "- Loading from disk ... Done!\n"
     ]
    }
   ],
   "source": [
    "#load in entire annual balance sheet data \n",
    "df_balance_a = sf.load_balance(variant='annual', market='us').reset_index()\n",
    "#banks only\n",
    "df_balance_a_bank = sf.load_balance_banks(variant='annual', market='us').reset_index()\n",
    "#insurance companies only\n",
    "df_balance_a_ins = sf.load_balance_insurance(variant='annual', market='us').reset_index()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## cash flow"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Dataset \"us-cashflow-annual\" on disk (0 days old).\n",
      "- Loading from disk ... Done!\n",
      "Dataset \"us-cashflow-banks-annual\" on disk (0 days old).\n",
      "- Loading from disk ... Done!\n",
      "Dataset \"us-cashflow-insurance-annual\" on disk (0 days old).\n",
      "- Loading from disk ... Done!\n"
     ]
    }
   ],
   "source": [
    "#load in entire annual balance sheet data \n",
    "df_cashflow_a = sf.load_cashflow(variant='annual', market='us').reset_index()\n",
    "#banks only\n",
    "df_cashflow_a_bank = sf.load_cashflow_banks(variant='annual', market='us').reset_index()\n",
    "#insurance companies only\n",
    "df_cashflow_a_ins = sf.load_cashflow_insurance(variant='annual', market='us').reset_index()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Shareprice "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Dataset \"us-shareprices-daily\" on disk (0 days old).\n",
      "- Loading from disk ... Done!\n",
      "Dataset \"us-shareprices-latest\" on disk (0 days old).\n",
      "- Loading from disk ... Done!\n"
     ]
    }
   ],
   "source": [
    "df_prices = sf.load_shareprices(variant='daily', market='us').reset_index()\n",
    "df_prices_latest = sf.load_shareprices(variant='latest', market='us').reset_index()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Companies details"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Dataset \"us-companies\" on disk (0 days old).\n",
      "- Loading from disk ... Done!\n",
      "Dataset \"industries\" on disk (0 days old).\n",
      "- Loading from disk ... Done!\n"
     ]
    }
   ],
   "source": [
    "comp = sf.load_companies(market='us').reset_index()\n",
    "industry = sf.load_industries().reset_index()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Date exploration"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Income Statement "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "结论：\n",
    "\n",
    "\n",
    "1. Simfin ID 和 Ticker都是唯一的\n",
    "2. 三个表之间公司无重合\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Ticker', 'Report Date', 'SimFinId', 'Currency', 'Fiscal Year',\n",
       "       'Fiscal Period', 'Publish Date', 'Shares (Basic)', 'Shares (Diluted)',\n",
       "       'Revenue', 'Cost of Revenue', 'Gross Profit', 'Operating Expenses',\n",
       "       'Selling, General & Administrative', 'Research & Development',\n",
       "       'Depreciation & Amortization', 'Operating Income (Loss)',\n",
       "       'Non-Operating Income (Loss)', 'Interest Expense, Net',\n",
       "       'Pretax Income (Loss), Adj.', 'Abnormal Gains (Losses)',\n",
       "       'Pretax Income (Loss)', 'Income Tax (Expense) Benefit, Net',\n",
       "       'Income (Loss) from Continuing Operations',\n",
       "       'Net Extraordinary Gains (Losses)', 'Net Income',\n",
       "       'Net Income (Common)'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#display all column names \n",
    "df_income_a.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(14768, 27)"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "1915"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "1915"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#everything included\n",
    "df_income_a.shape #(14768, 25)\n",
    "df_income_a['Ticker'].nunique() #1915 stocks\n",
    "df_income_a['SimFinId'].nunique() #same as above "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "set()"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "set()"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#看income dataset是否包含banks 和 insurance\n",
    "\n",
    "intersection = set(df_income_a['SimFinId']) & set(df_income_a_bank['SimFinId'])\n",
    "intersection #无重合\n",
    "\n",
    "intersection2 = set(df_income_a['SimFinId']) & set(df_income_a_ins['SimFinId'])\n",
    "intersection2 #无重合"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Prop</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>index</th>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Publish Date</th>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Net Income</th>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Income (Loss) from Continuing Operations</th>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Pretax Income (Loss)</th>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Pretax Income (Loss), Adj.</th>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Ticker</th>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Net Income (Common)</th>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fiscal Year</th>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Report Date</th>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fiscal Period</th>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SimFinId</th>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Currency</th>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Operating Income (Loss)</th>\n",
       "      <td>99.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Operating Expenses</th>\n",
       "      <td>99.57</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Non-Operating Income (Loss)</th>\n",
       "      <td>98.96</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Gross Profit</th>\n",
       "      <td>98.48</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Revenue</th>\n",
       "      <td>98.46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Shares (Basic)</th>\n",
       "      <td>97.23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Shares (Diluted)</th>\n",
       "      <td>96.74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Selling, General &amp; Administrative</th>\n",
       "      <td>95.12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Income Tax (Expense) Benefit, Net</th>\n",
       "      <td>94.18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cost of Revenue</th>\n",
       "      <td>90.91</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Interest Expense, Net</th>\n",
       "      <td>88.04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Abnormal Gains (Losses)</th>\n",
       "      <td>66.33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Depreciation &amp; Amortization</th>\n",
       "      <td>44.01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Research &amp; Development</th>\n",
       "      <td>39.96</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Net Extraordinary Gains (Losses)</th>\n",
       "      <td>22.10</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                            Prop\n",
       "index                                     100.00\n",
       "Publish Date                              100.00\n",
       "Net Income                                100.00\n",
       "Income (Loss) from Continuing Operations  100.00\n",
       "Pretax Income (Loss)                      100.00\n",
       "Pretax Income (Loss), Adj.                100.00\n",
       "Ticker                                    100.00\n",
       "Net Income (Common)                       100.00\n",
       "Fiscal Year                               100.00\n",
       "Report Date                               100.00\n",
       "Fiscal Period                             100.00\n",
       "SimFinId                                  100.00\n",
       "Currency                                  100.00\n",
       "Operating Income (Loss)                    99.97\n",
       "Operating Expenses                         99.57\n",
       "Non-Operating Income (Loss)                98.96\n",
       "Gross Profit                               98.48\n",
       "Revenue                                    98.46\n",
       "Shares (Basic)                             97.23\n",
       "Shares (Diluted)                           96.74\n",
       "Selling, General & Administrative          95.12\n",
       "Income Tax (Expense) Benefit, Net          94.18\n",
       "Cost of Revenue                            90.91\n",
       "Interest Expense, Net                      88.04\n",
       "Abnormal Gains (Losses)                    66.33\n",
       "Depreciation & Amortization                44.01\n",
       "Research & Development                     39.96\n",
       "Net Extraordinary Gains (Losses)           22.10"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#check non-missing value % of income statement\n",
    "prop_nonmissing(df_income_a).sort_values(by = 'Prop',ascending = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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c6fmzp2rQYMGSZKqq6uVm5urRx55RG63u52rQzJq6d47L7/8sn7/+9+roqKi/lggENDixYv10UcfafTo0S3qj5k0jDd06FAVFBSooKBAW7ZsUUpKit566632LgtJ6tK9d/bs2VO/S96cOXNUWVkpSerWrZuefvrpi14bDAY1fvx4/fCHP2xxf4Q0OpTa2lodP35c3bp106OPPqqpU6dqypQpevXVV1VeXq6xY8fq/K3/y5cv1+uvv97oP6KdO3fq3nvv1ezZszVu3Lj6HesWLFhQ/+Tr9u3btWDBAknSq6++qilTpmjatGkt/t9UdE6X7r2zZMkS/fznP1dBQYFGjBihJ554QpJ02223KS0t7aLXduvWTcOHD/9K/bHcAeP97W9/k8/n08mTJ+VwODR58mTV1taquLhYmzdvVjAY1OTJkzVs2DBdffXVev/993X99dfrvffe00MPPaTp06dr5cqVGjRokJ5//nk98cQTuvnmm1VSUqKtW7eqtrZWt9xyi2bPnt1o/6dOndK6dev04osvKjU1VfPmzdOOHTs0bNiwBF8JmGj//v1avny5pLptXPPy8tq0fUIaxhs6dKh+9atfqaKiQrNmzVJubq727t2r3bt31//yJhwOq6SkRJMnT9ZLL72ksrIyfeMb35DL5WryH9HgwYPlcrnkcrkafVT9/Iz80KFDKi8v1w9+8ANJdevihw8fTsTQ0QHk5eVpzZo16tOnjz744IM234CJkEaH0b17d61du1YzZ87UvHnzdNNNN2nFihWKRqNav369cnNzdfXVV2vt2rU6duyYli5dKqnpf0SWZTXow+1213//008/lSTl5uYqJydHTz75pFJSUrRlyxbl5+cnaNQw3bJlyzR//nxFIhFJ0sMPP9ym7RPS6FAGDRokn8+nbdu2KScnR9OnT1dNTY1GjRpVvx/5mDFj9O6772rAgAGSGv9HdPz48UbbnzRpkhYtWqRXXnlFAwcOlCRlZWXp7rvvls/nUyQSUd++fTV27Nj4DxbGys3N1XPPPSdJuu6665r95JYdO3Y0ODZhwoQW98UGSwBgMO7uAACDEdIAYDBCGgAMRkgDgMEIaQAwGCENAAYjpAHAYP8fD9FkYkHuGc4AAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#plot distribution for each column\n",
    "drop_c =['Ticker','Report Date','SimFinId','Currency','Fiscal Year','Fiscal Period', 'Publish Date' ]\n",
    "df = df_income_a.drop(drop_c,axis=1)\n",
    "for i, col in enumerate(df.columns):\n",
    "    if isinstance(df[col], object):\n",
    "        __ = plt.figure(i)\n",
    "        _ = sns.distplot(df[col])\n",
    "        plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Balance Sheet"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Ticker', 'Report Date', 'SimFinId', 'Currency', 'Fiscal Year',\n",
       "       'Fiscal Period', 'Publish Date', 'Shares (Basic)', 'Shares (Diluted)',\n",
       "       'Cash, Cash Equivalents & Short Term Investments',\n",
       "       'Accounts & Notes Receivable', 'Inventories', 'Total Current Assets',\n",
       "       'Property, Plant & Equipment, Net',\n",
       "       'Long Term Investments & Receivables', 'Other Long Term Assets',\n",
       "       'Total Noncurrent Assets', 'Total Assets', 'Payables & Accruals',\n",
       "       'Short Term Debt', 'Total Current Liabilities', 'Long Term Debt',\n",
       "       'Total Noncurrent Liabilities', 'Total Liabilities',\n",
       "       'Share Capital & Additional Paid-In Capital', 'Treasury Stock',\n",
       "       'Retained Earnings', 'Total Equity', 'Total Liabilities & Equity'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#display all column names \n",
    "df_balance_a.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(14768, 29)"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "1915"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "1915"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#everything included\n",
    "df_balance_a.shape #(14768, 29)\n",
    "df_balance_a['Ticker'].nunique() #1915 stocks\n",
    "df_balance_a['SimFinId'].nunique() #same as above "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "set()"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "set()"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#看三张表重合度,无重合\n",
    "intersection = set(df_balance_a['SimFinId']) & set(df_balance_a_bank['SimFinId'])\n",
    "intersection #无重合\n",
    "\n",
    "intersection2 = set(df_balance_a['SimFinId']) & set(df_income_a_ins['SimFinId'])\n",
    "intersection2 #无重合"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Prop</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>index</th>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Publish Date</th>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Total Liabilities</th>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Total Current Liabilities</th>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Total Assets</th>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Ticker</th>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Total Liabilities &amp; Equity</th>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fiscal Period</th>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fiscal Year</th>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Report Date</th>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SimFinId</th>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Currency</th>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Total Equity</th>\n",
       "      <td>99.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Total Current Assets</th>\n",
       "      <td>99.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cash, Cash Equivalents &amp; Short Term Investments</th>\n",
       "      <td>99.76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Total Noncurrent Assets</th>\n",
       "      <td>99.57</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Payables &amp; Accruals</th>\n",
       "      <td>99.56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Share Capital &amp; Additional Paid-In Capital</th>\n",
       "      <td>99.15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Total Noncurrent Liabilities</th>\n",
       "      <td>98.94</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Other Long Term Assets</th>\n",
       "      <td>98.61</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Property, Plant &amp; Equipment, Net</th>\n",
       "      <td>98.29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Retained Earnings</th>\n",
       "      <td>96.61</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Shares (Basic)</th>\n",
       "      <td>94.23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Shares (Diluted)</th>\n",
       "      <td>93.78</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Accounts &amp; Notes Receivable</th>\n",
       "      <td>91.68</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Long Term Debt</th>\n",
       "      <td>78.42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Inventories</th>\n",
       "      <td>69.41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Short Term Debt</th>\n",
       "      <td>66.87</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Treasury Stock</th>\n",
       "      <td>49.12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Long Term Investments &amp; Receivables</th>\n",
       "      <td>29.65</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                   Prop\n",
       "index                                            100.00\n",
       "Publish Date                                     100.00\n",
       "Total Liabilities                                100.00\n",
       "Total Current Liabilities                        100.00\n",
       "Total Assets                                     100.00\n",
       "Ticker                                           100.00\n",
       "Total Liabilities & Equity                       100.00\n",
       "Fiscal Period                                    100.00\n",
       "Fiscal Year                                      100.00\n",
       "Report Date                                      100.00\n",
       "SimFinId                                         100.00\n",
       "Currency                                         100.00\n",
       "Total Equity                                      99.99\n",
       "Total Current Assets                              99.97\n",
       "Cash, Cash Equivalents & Short Term Investments   99.76\n",
       "Total Noncurrent Assets                           99.57\n",
       "Payables & Accruals                               99.56\n",
       "Share Capital & Additional Paid-In Capital        99.15\n",
       "Total Noncurrent Liabilities                      98.94\n",
       "Other Long Term Assets                            98.61\n",
       "Property, Plant & Equipment, Net                  98.29\n",
       "Retained Earnings                                 96.61\n",
       "Shares (Basic)                                    94.23\n",
       "Shares (Diluted)                                  93.78\n",
       "Accounts & Notes Receivable                       91.68\n",
       "Long Term Debt                                    78.42\n",
       "Inventories                                       69.41\n",
       "Short Term Debt                                   66.87\n",
       "Treasury Stock                                    49.12\n",
       "Long Term Investments & Receivables               29.65"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#balance sheet\n",
    "prop_nonmissing(df_balance_a).sort_values(by='Prop',ascending = False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Cash Flow"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Ticker', 'Report Date', 'SimFinId', 'Currency', 'Fiscal Year',\n",
       "       'Fiscal Period', 'Publish Date', 'Shares (Basic)', 'Shares (Diluted)',\n",
       "       'Net Income/Starting Line', 'Depreciation & Amortization',\n",
       "       'Non-Cash Items', 'Change in Working Capital',\n",
       "       'Change in Accounts Receivable', 'Change in Inventories',\n",
       "       'Change in Accounts Payable', 'Change in Other',\n",
       "       'Net Cash from Operating Activities',\n",
       "       'Change in Fixed Assets & Intangibles',\n",
       "       'Net Change in Long Term Investment',\n",
       "       'Net Cash from Acquisitions & Divestitures',\n",
       "       'Net Cash from Investing Activities', 'Dividends Paid',\n",
       "       'Cash from (Repayment of) Debt', 'Cash from (Repurchase of) Equity',\n",
       "       'Net Cash from Financing Activities', 'Net Change in Cash'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#display all column names \n",
    "df_cashflow_a.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(14768, 27)"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "1915"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "1915"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#everything included\n",
    "df_cashflow_a.shape #(14768, 27)\n",
    "df_cashflow_a['Ticker'].nunique() #1915 stocks\n",
    "df_cashflow_a['SimFinId'].nunique() #same as above "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "set()"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "set()"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#看三张表重合度,无重合\n",
    "intersection = set(df_cashflow_a['SimFinId']) & set(df_cashflow_a_bank['SimFinId'])\n",
    "intersection #无重合\n",
    "\n",
    "intersection2 = set(df_cashflow_a['SimFinId']) & set(df_cashflow_a_ins['SimFinId'])\n",
    "intersection2 #无重合"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Prop</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>index</th>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fiscal Period</th>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Net Cash from Operating Activities</th>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Ticker</th>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Publish Date</th>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Net Change in Cash</th>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fiscal Year</th>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SimFinId</th>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Report Date</th>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Currency</th>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Net Income/Starting Line</th>\n",
       "      <td>99.67</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Net Cash from Financing Activities</th>\n",
       "      <td>99.63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Net Cash from Investing Activities</th>\n",
       "      <td>99.62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Non-Cash Items</th>\n",
       "      <td>99.61</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Change in Working Capital</th>\n",
       "      <td>99.52</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Depreciation &amp; Amortization</th>\n",
       "      <td>97.91</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Change in Fixed Assets &amp; Intangibles</th>\n",
       "      <td>97.85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Shares (Basic)</th>\n",
       "      <td>97.23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Shares (Diluted)</th>\n",
       "      <td>96.74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cash from (Repurchase of) Equity</th>\n",
       "      <td>88.85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cash from (Repayment of) Debt</th>\n",
       "      <td>87.78</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Net Cash from Acquisitions &amp; Divestitures</th>\n",
       "      <td>60.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Dividends Paid</th>\n",
       "      <td>51.67</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Net Change in Long Term Investment</th>\n",
       "      <td>39.48</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Change in Other</th>\n",
       "      <td>11.43</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Change in Accounts Receivable</th>\n",
       "      <td>10.41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Change in Inventories</th>\n",
       "      <td>8.23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Change in Accounts Payable</th>\n",
       "      <td>7.83</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                             Prop\n",
       "index                                      100.00\n",
       "Fiscal Period                              100.00\n",
       "Net Cash from Operating Activities         100.00\n",
       "Ticker                                     100.00\n",
       "Publish Date                               100.00\n",
       "Net Change in Cash                         100.00\n",
       "Fiscal Year                                100.00\n",
       "SimFinId                                   100.00\n",
       "Report Date                                100.00\n",
       "Currency                                   100.00\n",
       "Net Income/Starting Line                    99.67\n",
       "Net Cash from Financing Activities          99.63\n",
       "Net Cash from Investing Activities          99.62\n",
       "Non-Cash Items                              99.61\n",
       "Change in Working Capital                   99.52\n",
       "Depreciation & Amortization                 97.91\n",
       "Change in Fixed Assets & Intangibles        97.85\n",
       "Shares (Basic)                              97.23\n",
       "Shares (Diluted)                            96.74\n",
       "Cash from (Repurchase of) Equity            88.85\n",
       "Cash from (Repayment of) Debt               87.78\n",
       "Net Cash from Acquisitions & Divestitures   60.40\n",
       "Dividends Paid                              51.67\n",
       "Net Change in Long Term Investment          39.48\n",
       "Change in Other                             11.43\n",
       "Change in Accounts Receivable               10.41\n",
       "Change in Inventories                        8.23\n",
       "Change in Accounts Payable                   7.83"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#cash flow\n",
    "prop_nonmissing(df_cashflow_a).sort_values(by='Prop', ascending = False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "可以drop：Net Extraordinary Gains (Losses)\t,Abnormal Gains (Losses), Depreciation， too much missing value and are not useful for calculating financial ratio\n",
    "\n",
    "R&D是否需要drop？或许R&D投资高的企业profit margin比较高\n",
    "Net extraordinary gain 和 loss或许可以做成categorical variable"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Stock Price"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Ticker', 'Date', 'SimFinId', 'Open', 'Low', 'High', 'Close',\n",
       "       'Adj. Close', 'Dividend', 'Volume'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#display all column names\n",
    "df_prices.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(5027050, 10)"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "2050"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_prices.shape #(5027050, 10)\n",
    "df_prices['Ticker'].nunique()#2050 companies"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Prop</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>index</th>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Ticker</th>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SimFinId</th>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Volume</th>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Adj. Close</th>\n",
       "      <td>99.88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Open</th>\n",
       "      <td>98.38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Low</th>\n",
       "      <td>98.38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>High</th>\n",
       "      <td>98.38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Close</th>\n",
       "      <td>98.38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Dividend</th>\n",
       "      <td>0.76</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              Prop\n",
       "index       100.00\n",
       "Ticker      100.00\n",
       "Date        100.00\n",
       "SimFinId    100.00\n",
       "Volume      100.00\n",
       "Adj. Close   99.88\n",
       "Open         98.38\n",
       "Low          98.38\n",
       "High         98.38\n",
       "Close        98.38\n",
       "Dividend      0.76"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#check missing values \n",
    "prop_nonmissing(df_prices).sort_values(by = 'Prop', ascending = False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Company&Industry"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Ticker', 'SimFinId', 'Company Name', 'IndustryId'], dtype='object')"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "Index(['IndustryId', 'Sector', 'Industry'], dtype='object')"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#display all column names \n",
    "comp.columns\n",
    "industry.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(2069, 4)"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "(71, 3)"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "2069"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "71"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "71"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "12"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "comp.shape #(2069, 4)\n",
    "industry.shape #(71,3)\n",
    "comp['Ticker'].nunique() #2069 stocks\n",
    "industry['IndustryId'].nunique() #71 industries\n",
    "industry['Industry'].nunique()#same as above\n",
    "industry['Sector'].nunique()#12 sector"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Prop</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>index</th>\n",
       "      <td>100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Ticker</th>\n",
       "      <td>100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SimFinId</th>\n",
       "      <td>100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Company Name</th>\n",
       "      <td>100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>IndustryId</th>\n",
       "      <td>91.2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               Prop\n",
       "index         100.0\n",
       "Ticker        100.0\n",
       "SimFinId      100.0\n",
       "Company Name  100.0\n",
       "IndustryId     91.2"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Prop</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>index</th>\n",
       "      <td>100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>IndustryId</th>\n",
       "      <td>100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sector</th>\n",
       "      <td>100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Industry</th>\n",
       "      <td>100.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             Prop\n",
       "index       100.0\n",
       "IndustryId  100.0\n",
       "Sector      100.0\n",
       "Industry    100.0"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#check missing values\n",
    "prop_nonmissing(comp)\n",
    "prop_nonmissing(industry)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1915"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "1915"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "intersection3 = set(df_balance_a['SimFinId']) & set(df_income_a['SimFinId'])\n",
    "len(intersection3) #有income和balance数据的是同一批公司\n",
    "\n",
    "intersection4 = set(df_balance_a['SimFinId']) & set(df_cashflow_a['SimFinId'])\n",
    "len(intersection4) #有income和balance数据的是同一批公司"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Join Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Ticker</th>\n",
       "      <th>SimFinId</th>\n",
       "      <th>Company Name</th>\n",
       "      <th>IndustryId</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>A</td>\n",
       "      <td>45846</td>\n",
       "      <td>AGILENT TECHNOLOGIES INC</td>\n",
       "      <td>106001.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>AA</td>\n",
       "      <td>367153</td>\n",
       "      <td>Alcoa Corp</td>\n",
       "      <td>110004.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Ticker  SimFinId              Company Name  IndustryId\n",
       "0      A     45846  AGILENT TECHNOLOGIES INC    106001.0\n",
       "1     AA    367153                Alcoa Corp    110004.0"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>IndustryId</th>\n",
       "      <th>Sector</th>\n",
       "      <th>Industry</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>100001</td>\n",
       "      <td>Industrials</td>\n",
       "      <td>Industrial Products</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>100002</td>\n",
       "      <td>Industrials</td>\n",
       "      <td>Business Services</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   IndustryId       Sector             Industry\n",
       "0      100001  Industrials  Industrial Products\n",
       "1      100002  Industrials    Business Services"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "comp.head(2)\n",
    "industry.head(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Ticker</th>\n",
       "      <th>SimFinId</th>\n",
       "      <th>Company Name</th>\n",
       "      <th>IndustryId</th>\n",
       "      <th>Sector</th>\n",
       "      <th>Industry</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>A</td>\n",
       "      <td>45846</td>\n",
       "      <td>AGILENT TECHNOLOGIES INC</td>\n",
       "      <td>106001.0</td>\n",
       "      <td>Healthcare</td>\n",
       "      <td>Medical Diagnostics &amp; Research</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>AA</td>\n",
       "      <td>367153</td>\n",
       "      <td>Alcoa Corp</td>\n",
       "      <td>110004.0</td>\n",
       "      <td>Basic Materials</td>\n",
       "      <td>Metals &amp; Mining</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>AAC</td>\n",
       "      <td>939324</td>\n",
       "      <td>AAC Holdings, Inc.</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>AAL</td>\n",
       "      <td>68568</td>\n",
       "      <td>American Airlines Group Inc.</td>\n",
       "      <td>100006.0</td>\n",
       "      <td>Industrials</td>\n",
       "      <td>Airlines</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>AAME</td>\n",
       "      <td>450021</td>\n",
       "      <td>ATLANTIC AMERICAN CORP</td>\n",
       "      <td>104004.0</td>\n",
       "      <td>Financial Services</td>\n",
       "      <td>Insurance - Life</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Ticker  SimFinId                  Company Name  IndustryId  \\\n",
       "0      A     45846      AGILENT TECHNOLOGIES INC    106001.0   \n",
       "1     AA    367153                    Alcoa Corp    110004.0   \n",
       "2    AAC    939324            AAC Holdings, Inc.         NaN   \n",
       "3    AAL     68568  American Airlines Group Inc.    100006.0   \n",
       "4   AAME    450021        ATLANTIC AMERICAN CORP    104004.0   \n",
       "\n",
       "               Sector                        Industry  \n",
       "0          Healthcare  Medical Diagnostics & Research  \n",
       "1     Basic Materials                 Metals & Mining  \n",
       "2                 NaN                             NaN  \n",
       "3         Industrials                        Airlines  \n",
       "4  Financial Services                Insurance - Life  "
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "(2069, 6)"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#left join industry on company\n",
    "comp['IndustryId'] = comp[['IndustryId']].astype('float')\n",
    "df = pd.merge(comp, industry, on ='IndustryId', how = 'left',suffixes=('','_right'))\n",
    "df.head(5)\n",
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Ticker</th>\n",
       "      <th>SimFinId</th>\n",
       "      <th>Company Name</th>\n",
       "      <th>IndustryId</th>\n",
       "      <th>Sector</th>\n",
       "      <th>Industry</th>\n",
       "      <th>Report Date</th>\n",
       "      <th>Currency</th>\n",
       "      <th>Fiscal Year</th>\n",
       "      <th>Fiscal Period</th>\n",
       "      <th>Publish Date</th>\n",
       "      <th>Shares (Basic)</th>\n",
       "      <th>Shares (Diluted)</th>\n",
       "      <th>Revenue</th>\n",
       "      <th>Cost of Revenue</th>\n",
       "      <th>Gross Profit</th>\n",
       "      <th>Operating Expenses</th>\n",
       "      <th>Selling, General &amp; Administrative</th>\n",
       "      <th>Research &amp; Development</th>\n",
       "      <th>Depreciation &amp; Amortization</th>\n",
       "      <th>Operating Income (Loss)</th>\n",
       "      <th>Non-Operating Income (Loss)</th>\n",
       "      <th>Interest Expense, Net</th>\n",
       "      <th>Pretax Income (Loss), Adj.</th>\n",
       "      <th>Abnormal Gains (Losses)</th>\n",
       "      <th>Pretax Income (Loss)</th>\n",
       "      <th>Income Tax (Expense) Benefit, Net</th>\n",
       "      <th>Income (Loss) from Continuing Operations</th>\n",
       "      <th>Net Extraordinary Gains (Losses)</th>\n",
       "      <th>Net Income</th>\n",
       "      <th>Net Income (Common)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>A</td>\n",
       "      <td>45846</td>\n",
       "      <td>AGILENT TECHNOLOGIES INC</td>\n",
       "      <td>106001.0</td>\n",
       "      <td>Healthcare</td>\n",
       "      <td>Medical Diagnostics &amp; Research</td>\n",
       "      <td>2008-10-31</td>\n",
       "      <td>USD</td>\n",
       "      <td>2008.0</td>\n",
       "      <td>FY</td>\n",
       "      <td>2009-10-05</td>\n",
       "      <td>363000000.0</td>\n",
       "      <td>371000000.0</td>\n",
       "      <td>5.774000e+09</td>\n",
       "      <td>-2.578000e+09</td>\n",
       "      <td>3.196000e+09</td>\n",
       "      <td>-2.401000e+09</td>\n",
       "      <td>-1.697000e+09</td>\n",
       "      <td>-704000000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>795000000.0</td>\n",
       "      <td>20000000.0</td>\n",
       "      <td>-10000000.0</td>\n",
       "      <td>815000000.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>815000000.0</td>\n",
       "      <td>-122000000.0</td>\n",
       "      <td>693000000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>693000000.0</td>\n",
       "      <td>693000000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>A</td>\n",
       "      <td>45846</td>\n",
       "      <td>AGILENT TECHNOLOGIES INC</td>\n",
       "      <td>106001.0</td>\n",
       "      <td>Healthcare</td>\n",
       "      <td>Medical Diagnostics &amp; Research</td>\n",
       "      <td>2009-10-31</td>\n",
       "      <td>USD</td>\n",
       "      <td>2009.0</td>\n",
       "      <td>FY</td>\n",
       "      <td>2009-12-21</td>\n",
       "      <td>346000000.0</td>\n",
       "      <td>346000000.0</td>\n",
       "      <td>4.481000e+09</td>\n",
       "      <td>-2.189000e+09</td>\n",
       "      <td>2.292000e+09</td>\n",
       "      <td>-2.245000e+09</td>\n",
       "      <td>-1.603000e+09</td>\n",
       "      <td>-642000000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>47000000.0</td>\n",
       "      <td>-40000000.0</td>\n",
       "      <td>-59000000.0</td>\n",
       "      <td>7000000.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>7000000.0</td>\n",
       "      <td>-38000000.0</td>\n",
       "      <td>-31000000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-31000000.0</td>\n",
       "      <td>-31000000.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Ticker  SimFinId              Company Name  IndustryId      Sector  \\\n",
       "0      A     45846  AGILENT TECHNOLOGIES INC    106001.0  Healthcare   \n",
       "1      A     45846  AGILENT TECHNOLOGIES INC    106001.0  Healthcare   \n",
       "\n",
       "                         Industry Report Date Currency  Fiscal Year  \\\n",
       "0  Medical Diagnostics & Research  2008-10-31      USD       2008.0   \n",
       "1  Medical Diagnostics & Research  2009-10-31      USD       2009.0   \n",
       "\n",
       "  Fiscal Period Publish Date  Shares (Basic)  Shares (Diluted)       Revenue  \\\n",
       "0            FY   2009-10-05     363000000.0       371000000.0  5.774000e+09   \n",
       "1            FY   2009-12-21     346000000.0       346000000.0  4.481000e+09   \n",
       "\n",
       "   Cost of Revenue  Gross Profit  Operating Expenses  \\\n",
       "0    -2.578000e+09  3.196000e+09       -2.401000e+09   \n",
       "1    -2.189000e+09  2.292000e+09       -2.245000e+09   \n",
       "\n",
       "   Selling, General & Administrative  Research & Development  \\\n",
       "0                      -1.697000e+09            -704000000.0   \n",
       "1                      -1.603000e+09            -642000000.0   \n",
       "\n",
       "   Depreciation & Amortization  Operating Income (Loss)  \\\n",
       "0                          NaN              795000000.0   \n",
       "1                          NaN               47000000.0   \n",
       "\n",
       "   Non-Operating Income (Loss)  Interest Expense, Net  \\\n",
       "0                   20000000.0            -10000000.0   \n",
       "1                  -40000000.0            -59000000.0   \n",
       "\n",
       "   Pretax Income (Loss), Adj.  Abnormal Gains (Losses)  Pretax Income (Loss)  \\\n",
       "0                 815000000.0                      0.0           815000000.0   \n",
       "1                   7000000.0                      0.0             7000000.0   \n",
       "\n",
       "   Income Tax (Expense) Benefit, Net  \\\n",
       "0                       -122000000.0   \n",
       "1                        -38000000.0   \n",
       "\n",
       "   Income (Loss) from Continuing Operations  Net Extraordinary Gains (Losses)  \\\n",
       "0                               693000000.0                               NaN   \n",
       "1                               -31000000.0                               NaN   \n",
       "\n",
       "    Net Income  Net Income (Common)  \n",
       "0  693000000.0          693000000.0  \n",
       "1  -31000000.0          -31000000.0  "
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "Index(['Ticker', 'SimFinId', 'Company Name', 'IndustryId', 'Sector',\n",
       "       'Industry', 'Report Date', 'Currency', 'Fiscal Year', 'Fiscal Period',\n",
       "       'Publish Date', 'Shares (Basic)', 'Shares (Diluted)', 'Revenue',\n",
       "       'Cost of Revenue', 'Gross Profit', 'Operating Expenses',\n",
       "       'Selling, General & Administrative', 'Research & Development',\n",
       "       'Depreciation & Amortization', 'Operating Income (Loss)',\n",
       "       'Non-Operating Income (Loss)', 'Interest Expense, Net',\n",
       "       'Pretax Income (Loss), Adj.', 'Abnormal Gains (Losses)',\n",
       "       'Pretax Income (Loss)', 'Income Tax (Expense) Benefit, Net',\n",
       "       'Income (Loss) from Continuing Operations',\n",
       "       'Net Extraordinary Gains (Losses)', 'Net Income',\n",
       "       'Net Income (Common)'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "(14768, 27)"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "(14922, 31)"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#left join income statement on previous df \n",
    "df2 = pd.merge(df,df_income_a,on = ['Ticker','SimFinId'], how = 'left', suffixes=('','_i'))\n",
    "df2.head(2)\n",
    "df2.columns\n",
    "df_income_a.shape\n",
    "df2.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Ticker</th>\n",
       "      <th>SimFinId</th>\n",
       "      <th>Company Name</th>\n",
       "      <th>IndustryId</th>\n",
       "      <th>Sector</th>\n",
       "      <th>Industry</th>\n",
       "      <th>Report Date</th>\n",
       "      <th>Currency</th>\n",
       "      <th>Fiscal Year</th>\n",
       "      <th>Fiscal Period</th>\n",
       "      <th>Publish Date</th>\n",
       "      <th>Shares (Basic)</th>\n",
       "      <th>Shares (Diluted)</th>\n",
       "      <th>Revenue</th>\n",
       "      <th>Cost of Revenue</th>\n",
       "      <th>Gross Profit</th>\n",
       "      <th>Operating Expenses</th>\n",
       "      <th>Selling, General &amp; Administrative</th>\n",
       "      <th>Research &amp; Development</th>\n",
       "      <th>Depreciation &amp; Amortization</th>\n",
       "      <th>Operating Income (Loss)</th>\n",
       "      <th>Non-Operating Income (Loss)</th>\n",
       "      <th>Interest Expense, Net</th>\n",
       "      <th>Pretax Income (Loss), Adj.</th>\n",
       "      <th>Abnormal Gains (Losses)</th>\n",
       "      <th>Pretax Income (Loss)</th>\n",
       "      <th>Income Tax (Expense) Benefit, Net</th>\n",
       "      <th>Income (Loss) from Continuing Operations</th>\n",
       "      <th>Net Extraordinary Gains (Losses)</th>\n",
       "      <th>Net Income</th>\n",
       "      <th>Net Income (Common)</th>\n",
       "      <th>Fiscal Period_b</th>\n",
       "      <th>Shares (Basic)_b</th>\n",
       "      <th>Shares (Diluted)_b</th>\n",
       "      <th>Cash, Cash Equivalents &amp; Short Term Investments</th>\n",
       "      <th>Accounts &amp; Notes Receivable</th>\n",
       "      <th>Inventories</th>\n",
       "      <th>Total Current Assets</th>\n",
       "      <th>Property, Plant &amp; Equipment, Net</th>\n",
       "      <th>Long Term Investments &amp; Receivables</th>\n",
       "      <th>Other Long Term Assets</th>\n",
       "      <th>Total Noncurrent Assets</th>\n",
       "      <th>Total Assets</th>\n",
       "      <th>Payables &amp; Accruals</th>\n",
       "      <th>Short Term Debt</th>\n",
       "      <th>Total Current Liabilities</th>\n",
       "      <th>Long Term Debt</th>\n",
       "      <th>Total Noncurrent Liabilities</th>\n",
       "      <th>Total Liabilities</th>\n",
       "      <th>Share Capital &amp; Additional Paid-In Capital</th>\n",
       "      <th>Treasury Stock</th>\n",
       "      <th>Retained Earnings</th>\n",
       "      <th>Total Equity</th>\n",
       "      <th>Total Liabilities &amp; Equity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>A</td>\n",
       "      <td>45846</td>\n",
       "      <td>AGILENT TECHNOLOGIES INC</td>\n",
       "      <td>106001.0</td>\n",
       "      <td>Healthcare</td>\n",
       "      <td>Medical Diagnostics &amp; Research</td>\n",
       "      <td>2008-10-31</td>\n",
       "      <td>USD</td>\n",
       "      <td>2008.0</td>\n",
       "      <td>FY</td>\n",
       "      <td>2009-10-05</td>\n",
       "      <td>363000000.0</td>\n",
       "      <td>371000000.0</td>\n",
       "      <td>5.774000e+09</td>\n",
       "      <td>-2.578000e+09</td>\n",
       "      <td>3.196000e+09</td>\n",
       "      <td>-2.401000e+09</td>\n",
       "      <td>-1.697000e+09</td>\n",
       "      <td>-704000000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>7.950000e+08</td>\n",
       "      <td>20000000.0</td>\n",
       "      <td>-10000000.0</td>\n",
       "      <td>8.150000e+08</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.150000e+08</td>\n",
       "      <td>-122000000.0</td>\n",
       "      <td>6.930000e+08</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6.930000e+08</td>\n",
       "      <td>6.930000e+08</td>\n",
       "      <td>Q4</td>\n",
       "      <td>357000000.0</td>\n",
       "      <td>359000000.0</td>\n",
       "      <td>1.429000e+09</td>\n",
       "      <td>770000000.0</td>\n",
       "      <td>6.460000e+08</td>\n",
       "      <td>3.182000e+09</td>\n",
       "      <td>8.240000e+08</td>\n",
       "      <td>206000000.0</td>\n",
       "      <td>2.795000e+09</td>\n",
       "      <td>3.825000e+09</td>\n",
       "      <td>7.007000e+09</td>\n",
       "      <td>436000000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.330000e+09</td>\n",
       "      <td>2.125000e+09</td>\n",
       "      <td>3.118000e+09</td>\n",
       "      <td>4.448000e+09</td>\n",
       "      <td>7.416000e+09</td>\n",
       "      <td>-7.470000e+09</td>\n",
       "      <td>2.791000e+09</td>\n",
       "      <td>2.559000e+09</td>\n",
       "      <td>7.007000e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>A</td>\n",
       "      <td>45846</td>\n",
       "      <td>AGILENT TECHNOLOGIES INC</td>\n",
       "      <td>106001.0</td>\n",
       "      <td>Healthcare</td>\n",
       "      <td>Medical Diagnostics &amp; Research</td>\n",
       "      <td>2009-10-31</td>\n",
       "      <td>USD</td>\n",
       "      <td>2009.0</td>\n",
       "      <td>FY</td>\n",
       "      <td>2009-12-21</td>\n",
       "      <td>346000000.0</td>\n",
       "      <td>346000000.0</td>\n",
       "      <td>4.481000e+09</td>\n",
       "      <td>-2.189000e+09</td>\n",
       "      <td>2.292000e+09</td>\n",
       "      <td>-2.245000e+09</td>\n",
       "      <td>-1.603000e+09</td>\n",
       "      <td>-642000000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4.700000e+07</td>\n",
       "      <td>-40000000.0</td>\n",
       "      <td>-59000000.0</td>\n",
       "      <td>7.000000e+06</td>\n",
       "      <td>0.0</td>\n",
       "      <td>7.000000e+06</td>\n",
       "      <td>-38000000.0</td>\n",
       "      <td>-3.100000e+07</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-3.100000e+07</td>\n",
       "      <td>-3.100000e+07</td>\n",
       "      <td>Q4</td>\n",
       "      <td>343000000.0</td>\n",
       "      <td>343000000.0</td>\n",
       "      <td>2.493000e+09</td>\n",
       "      <td>595000000.0</td>\n",
       "      <td>5.520000e+08</td>\n",
       "      <td>3.961000e+09</td>\n",
       "      <td>8.450000e+08</td>\n",
       "      <td>163000000.0</td>\n",
       "      <td>2.643000e+09</td>\n",
       "      <td>3.651000e+09</td>\n",
       "      <td>7.612000e+09</td>\n",
       "      <td>307000000.0</td>\n",
       "      <td>1.000000e+06</td>\n",
       "      <td>1.123000e+09</td>\n",
       "      <td>2.904000e+09</td>\n",
       "      <td>3.975000e+09</td>\n",
       "      <td>5.098000e+09</td>\n",
       "      <td>7.558000e+09</td>\n",
       "      <td>-7.627000e+09</td>\n",
       "      <td>2.760000e+09</td>\n",
       "      <td>2.514000e+09</td>\n",
       "      <td>7.612000e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>A</td>\n",
       "      <td>45846</td>\n",
       "      <td>AGILENT TECHNOLOGIES INC</td>\n",
       "      <td>106001.0</td>\n",
       "      <td>Healthcare</td>\n",
       "      <td>Medical Diagnostics &amp; Research</td>\n",
       "      <td>2010-10-31</td>\n",
       "      <td>USD</td>\n",
       "      <td>2010.0</td>\n",
       "      <td>FY</td>\n",
       "      <td>2010-12-20</td>\n",
       "      <td>347000000.0</td>\n",
       "      <td>353000000.0</td>\n",
       "      <td>5.444000e+09</td>\n",
       "      <td>-2.514000e+09</td>\n",
       "      <td>2.930000e+09</td>\n",
       "      <td>-2.364000e+09</td>\n",
       "      <td>-1.752000e+09</td>\n",
       "      <td>-612000000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5.660000e+08</td>\n",
       "      <td>-6000000.0</td>\n",
       "      <td>-76000000.0</td>\n",
       "      <td>5.600000e+08</td>\n",
       "      <td>132000000.0</td>\n",
       "      <td>6.920000e+08</td>\n",
       "      <td>-8000000.0</td>\n",
       "      <td>6.840000e+08</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6.840000e+08</td>\n",
       "      <td>6.840000e+08</td>\n",
       "      <td>Q4</td>\n",
       "      <td>344000000.0</td>\n",
       "      <td>356000000.0</td>\n",
       "      <td>2.649000e+09</td>\n",
       "      <td>869000000.0</td>\n",
       "      <td>7.160000e+08</td>\n",
       "      <td>6.169000e+09</td>\n",
       "      <td>9.800000e+08</td>\n",
       "      <td>142000000.0</td>\n",
       "      <td>2.405000e+09</td>\n",
       "      <td>3.527000e+09</td>\n",
       "      <td>9.696000e+09</td>\n",
       "      <td>499000000.0</td>\n",
       "      <td>1.501000e+09</td>\n",
       "      <td>3.083000e+09</td>\n",
       "      <td>2.190000e+09</td>\n",
       "      <td>3.377000e+09</td>\n",
       "      <td>6.460000e+09</td>\n",
       "      <td>7.910000e+09</td>\n",
       "      <td>-8.038000e+09</td>\n",
       "      <td>3.444000e+09</td>\n",
       "      <td>3.236000e+09</td>\n",
       "      <td>9.696000e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>A</td>\n",
       "      <td>45846</td>\n",
       "      <td>AGILENT TECHNOLOGIES INC</td>\n",
       "      <td>106001.0</td>\n",
       "      <td>Healthcare</td>\n",
       "      <td>Medical Diagnostics &amp; Research</td>\n",
       "      <td>2011-10-31</td>\n",
       "      <td>USD</td>\n",
       "      <td>2011.0</td>\n",
       "      <td>FY</td>\n",
       "      <td>2011-12-16</td>\n",
       "      <td>347000000.0</td>\n",
       "      <td>355000000.0</td>\n",
       "      <td>6.615000e+09</td>\n",
       "      <td>-3.086000e+09</td>\n",
       "      <td>3.529000e+09</td>\n",
       "      <td>-2.458000e+09</td>\n",
       "      <td>-1.809000e+09</td>\n",
       "      <td>-649000000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.071000e+09</td>\n",
       "      <td>-39000000.0</td>\n",
       "      <td>-72000000.0</td>\n",
       "      <td>1.032000e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.032000e+09</td>\n",
       "      <td>-20000000.0</td>\n",
       "      <td>1.012000e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.012000e+09</td>\n",
       "      <td>1.012000e+09</td>\n",
       "      <td>Q4</td>\n",
       "      <td>346000000.0</td>\n",
       "      <td>353000000.0</td>\n",
       "      <td>3.527000e+09</td>\n",
       "      <td>860000000.0</td>\n",
       "      <td>8.980000e+08</td>\n",
       "      <td>5.569000e+09</td>\n",
       "      <td>1.006000e+09</td>\n",
       "      <td>117000000.0</td>\n",
       "      <td>2.365000e+09</td>\n",
       "      <td>3.488000e+09</td>\n",
       "      <td>9.057000e+09</td>\n",
       "      <td>472000000.0</td>\n",
       "      <td>2.530000e+08</td>\n",
       "      <td>1.837000e+09</td>\n",
       "      <td>1.932000e+09</td>\n",
       "      <td>2.904000e+09</td>\n",
       "      <td>4.741000e+09</td>\n",
       "      <td>8.271000e+09</td>\n",
       "      <td>-8.535000e+09</td>\n",
       "      <td>4.456000e+09</td>\n",
       "      <td>4.316000e+09</td>\n",
       "      <td>9.057000e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>A</td>\n",
       "      <td>45846</td>\n",
       "      <td>AGILENT TECHNOLOGIES INC</td>\n",
       "      <td>106001.0</td>\n",
       "      <td>Healthcare</td>\n",
       "      <td>Medical Diagnostics &amp; Research</td>\n",
       "      <td>2012-10-31</td>\n",
       "      <td>USD</td>\n",
       "      <td>2012.0</td>\n",
       "      <td>FY</td>\n",
       "      <td>2012-12-20</td>\n",
       "      <td>348000000.0</td>\n",
       "      <td>353000000.0</td>\n",
       "      <td>6.858000e+09</td>\n",
       "      <td>-3.254000e+09</td>\n",
       "      <td>3.604000e+09</td>\n",
       "      <td>-2.485000e+09</td>\n",
       "      <td>-1.817000e+09</td>\n",
       "      <td>-668000000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.119000e+09</td>\n",
       "      <td>-76000000.0</td>\n",
       "      <td>-92000000.0</td>\n",
       "      <td>1.043000e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.043000e+09</td>\n",
       "      <td>110000000.0</td>\n",
       "      <td>1.153000e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.153000e+09</td>\n",
       "      <td>1.153000e+09</td>\n",
       "      <td>Q4</td>\n",
       "      <td>348000000.0</td>\n",
       "      <td>353000000.0</td>\n",
       "      <td>2.351000e+09</td>\n",
       "      <td>923000000.0</td>\n",
       "      <td>1.014000e+09</td>\n",
       "      <td>4.629000e+09</td>\n",
       "      <td>1.164000e+09</td>\n",
       "      <td>109000000.0</td>\n",
       "      <td>4.634000e+09</td>\n",
       "      <td>5.907000e+09</td>\n",
       "      <td>1.053600e+10</td>\n",
       "      <td>461000000.0</td>\n",
       "      <td>2.500000e+08</td>\n",
       "      <td>1.893000e+09</td>\n",
       "      <td>2.112000e+09</td>\n",
       "      <td>3.458000e+09</td>\n",
       "      <td>5.351000e+09</td>\n",
       "      <td>8.495000e+09</td>\n",
       "      <td>-8.707000e+09</td>\n",
       "      <td>5.505000e+09</td>\n",
       "      <td>5.185000e+09</td>\n",
       "      <td>1.053600e+10</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Ticker  SimFinId              Company Name  IndustryId      Sector  \\\n",
       "0      A     45846  AGILENT TECHNOLOGIES INC    106001.0  Healthcare   \n",
       "1      A     45846  AGILENT TECHNOLOGIES INC    106001.0  Healthcare   \n",
       "2      A     45846  AGILENT TECHNOLOGIES INC    106001.0  Healthcare   \n",
       "3      A     45846  AGILENT TECHNOLOGIES INC    106001.0  Healthcare   \n",
       "4      A     45846  AGILENT TECHNOLOGIES INC    106001.0  Healthcare   \n",
       "\n",
       "                         Industry Report Date Currency  Fiscal Year  \\\n",
       "0  Medical Diagnostics & Research  2008-10-31      USD       2008.0   \n",
       "1  Medical Diagnostics & Research  2009-10-31      USD       2009.0   \n",
       "2  Medical Diagnostics & Research  2010-10-31      USD       2010.0   \n",
       "3  Medical Diagnostics & Research  2011-10-31      USD       2011.0   \n",
       "4  Medical Diagnostics & Research  2012-10-31      USD       2012.0   \n",
       "\n",
       "  Fiscal Period Publish Date  Shares (Basic)  Shares (Diluted)       Revenue  \\\n",
       "0            FY   2009-10-05     363000000.0       371000000.0  5.774000e+09   \n",
       "1            FY   2009-12-21     346000000.0       346000000.0  4.481000e+09   \n",
       "2            FY   2010-12-20     347000000.0       353000000.0  5.444000e+09   \n",
       "3            FY   2011-12-16     347000000.0       355000000.0  6.615000e+09   \n",
       "4            FY   2012-12-20     348000000.0       353000000.0  6.858000e+09   \n",
       "\n",
       "   Cost of Revenue  Gross Profit  Operating Expenses  \\\n",
       "0    -2.578000e+09  3.196000e+09       -2.401000e+09   \n",
       "1    -2.189000e+09  2.292000e+09       -2.245000e+09   \n",
       "2    -2.514000e+09  2.930000e+09       -2.364000e+09   \n",
       "3    -3.086000e+09  3.529000e+09       -2.458000e+09   \n",
       "4    -3.254000e+09  3.604000e+09       -2.485000e+09   \n",
       "\n",
       "   Selling, General & Administrative  Research & Development  \\\n",
       "0                      -1.697000e+09            -704000000.0   \n",
       "1                      -1.603000e+09            -642000000.0   \n",
       "2                      -1.752000e+09            -612000000.0   \n",
       "3                      -1.809000e+09            -649000000.0   \n",
       "4                      -1.817000e+09            -668000000.0   \n",
       "\n",
       "   Depreciation & Amortization  Operating Income (Loss)  \\\n",
       "0                          NaN             7.950000e+08   \n",
       "1                          NaN             4.700000e+07   \n",
       "2                          NaN             5.660000e+08   \n",
       "3                          NaN             1.071000e+09   \n",
       "4                          NaN             1.119000e+09   \n",
       "\n",
       "   Non-Operating Income (Loss)  Interest Expense, Net  \\\n",
       "0                   20000000.0            -10000000.0   \n",
       "1                  -40000000.0            -59000000.0   \n",
       "2                   -6000000.0            -76000000.0   \n",
       "3                  -39000000.0            -72000000.0   \n",
       "4                  -76000000.0            -92000000.0   \n",
       "\n",
       "   Pretax Income (Loss), Adj.  Abnormal Gains (Losses)  Pretax Income (Loss)  \\\n",
       "0                8.150000e+08                      0.0          8.150000e+08   \n",
       "1                7.000000e+06                      0.0          7.000000e+06   \n",
       "2                5.600000e+08              132000000.0          6.920000e+08   \n",
       "3                1.032000e+09                      NaN          1.032000e+09   \n",
       "4                1.043000e+09                      NaN          1.043000e+09   \n",
       "\n",
       "   Income Tax (Expense) Benefit, Net  \\\n",
       "0                       -122000000.0   \n",
       "1                        -38000000.0   \n",
       "2                         -8000000.0   \n",
       "3                        -20000000.0   \n",
       "4                        110000000.0   \n",
       "\n",
       "   Income (Loss) from Continuing Operations  Net Extraordinary Gains (Losses)  \\\n",
       "0                              6.930000e+08                               NaN   \n",
       "1                             -3.100000e+07                               NaN   \n",
       "2                              6.840000e+08                               NaN   \n",
       "3                              1.012000e+09                               NaN   \n",
       "4                              1.153000e+09                               NaN   \n",
       "\n",
       "     Net Income  Net Income (Common) Fiscal Period_b  Shares (Basic)_b  \\\n",
       "0  6.930000e+08         6.930000e+08              Q4       357000000.0   \n",
       "1 -3.100000e+07        -3.100000e+07              Q4       343000000.0   \n",
       "2  6.840000e+08         6.840000e+08              Q4       344000000.0   \n",
       "3  1.012000e+09         1.012000e+09              Q4       346000000.0   \n",
       "4  1.153000e+09         1.153000e+09              Q4       348000000.0   \n",
       "\n",
       "   Shares (Diluted)_b  Cash, Cash Equivalents & Short Term Investments  \\\n",
       "0         359000000.0                                     1.429000e+09   \n",
       "1         343000000.0                                     2.493000e+09   \n",
       "2         356000000.0                                     2.649000e+09   \n",
       "3         353000000.0                                     3.527000e+09   \n",
       "4         353000000.0                                     2.351000e+09   \n",
       "\n",
       "   Accounts & Notes Receivable   Inventories  Total Current Assets  \\\n",
       "0                  770000000.0  6.460000e+08          3.182000e+09   \n",
       "1                  595000000.0  5.520000e+08          3.961000e+09   \n",
       "2                  869000000.0  7.160000e+08          6.169000e+09   \n",
       "3                  860000000.0  8.980000e+08          5.569000e+09   \n",
       "4                  923000000.0  1.014000e+09          4.629000e+09   \n",
       "\n",
       "   Property, Plant & Equipment, Net  Long Term Investments & Receivables  \\\n",
       "0                      8.240000e+08                          206000000.0   \n",
       "1                      8.450000e+08                          163000000.0   \n",
       "2                      9.800000e+08                          142000000.0   \n",
       "3                      1.006000e+09                          117000000.0   \n",
       "4                      1.164000e+09                          109000000.0   \n",
       "\n",
       "   Other Long Term Assets  Total Noncurrent Assets  Total Assets  \\\n",
       "0            2.795000e+09             3.825000e+09  7.007000e+09   \n",
       "1            2.643000e+09             3.651000e+09  7.612000e+09   \n",
       "2            2.405000e+09             3.527000e+09  9.696000e+09   \n",
       "3            2.365000e+09             3.488000e+09  9.057000e+09   \n",
       "4            4.634000e+09             5.907000e+09  1.053600e+10   \n",
       "\n",
       "   Payables & Accruals  Short Term Debt  Total Current Liabilities  \\\n",
       "0          436000000.0              NaN               1.330000e+09   \n",
       "1          307000000.0     1.000000e+06               1.123000e+09   \n",
       "2          499000000.0     1.501000e+09               3.083000e+09   \n",
       "3          472000000.0     2.530000e+08               1.837000e+09   \n",
       "4          461000000.0     2.500000e+08               1.893000e+09   \n",
       "\n",
       "   Long Term Debt  Total Noncurrent Liabilities  Total Liabilities  \\\n",
       "0    2.125000e+09                  3.118000e+09       4.448000e+09   \n",
       "1    2.904000e+09                  3.975000e+09       5.098000e+09   \n",
       "2    2.190000e+09                  3.377000e+09       6.460000e+09   \n",
       "3    1.932000e+09                  2.904000e+09       4.741000e+09   \n",
       "4    2.112000e+09                  3.458000e+09       5.351000e+09   \n",
       "\n",
       "   Share Capital & Additional Paid-In Capital  Treasury Stock  \\\n",
       "0                                7.416000e+09   -7.470000e+09   \n",
       "1                                7.558000e+09   -7.627000e+09   \n",
       "2                                7.910000e+09   -8.038000e+09   \n",
       "3                                8.271000e+09   -8.535000e+09   \n",
       "4                                8.495000e+09   -8.707000e+09   \n",
       "\n",
       "   Retained Earnings  Total Equity  Total Liabilities & Equity  \n",
       "0       2.791000e+09  2.559000e+09                7.007000e+09  \n",
       "1       2.760000e+09  2.514000e+09                7.612000e+09  \n",
       "2       3.444000e+09  3.236000e+09                9.696000e+09  \n",
       "3       4.456000e+09  4.316000e+09                9.057000e+09  \n",
       "4       5.505000e+09  5.185000e+09                1.053600e+10  "
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "Index(['Ticker', 'SimFinId', 'Company Name', 'IndustryId', 'Sector',\n",
       "       'Industry', 'Report Date', 'Currency', 'Fiscal Year', 'Fiscal Period',\n",
       "       'Publish Date', 'Shares (Basic)', 'Shares (Diluted)', 'Revenue',\n",
       "       'Cost of Revenue', 'Gross Profit', 'Operating Expenses',\n",
       "       'Selling, General & Administrative', 'Research & Development',\n",
       "       'Depreciation & Amortization', 'Operating Income (Loss)',\n",
       "       'Non-Operating Income (Loss)', 'Interest Expense, Net',\n",
       "       'Pretax Income (Loss), Adj.', 'Abnormal Gains (Losses)',\n",
       "       'Pretax Income (Loss)', 'Income Tax (Expense) Benefit, Net',\n",
       "       'Income (Loss) from Continuing Operations',\n",
       "       'Net Extraordinary Gains (Losses)', 'Net Income', 'Net Income (Common)',\n",
       "       'Fiscal Period_b', 'Shares (Basic)_b', 'Shares (Diluted)_b',\n",
       "       'Cash, Cash Equivalents & Short Term Investments',\n",
       "       'Accounts & Notes Receivable', 'Inventories', 'Total Current Assets',\n",
       "       'Property, Plant & Equipment, Net',\n",
       "       'Long Term Investments & Receivables', 'Other Long Term Assets',\n",
       "       'Total Noncurrent Assets', 'Total Assets', 'Payables & Accruals',\n",
       "       'Short Term Debt', 'Total Current Liabilities', 'Long Term Debt',\n",
       "       'Total Noncurrent Liabilities', 'Total Liabilities',\n",
       "       'Share Capital & Additional Paid-In Capital', 'Treasury Stock',\n",
       "       'Retained Earnings', 'Total Equity', 'Total Liabilities & Equity'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "(14922, 31)"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "(14922, 54)"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#left join balance sheet on previous df \n",
    "df_balance_a['Fiscal Year'] = df_balance_a[['Fiscal Year']].astype('float')\n",
    "df3 = pd.merge(df2,df_balance_a,on = ['Ticker','SimFinId','Fiscal Year','Currency',\"Report Date\",\"Publish Date\"], how = 'left', suffixes=('','_b'))\n",
    "#take a look at the merge data\n",
    "df3.head()\n",
    "df3.columns\n",
    "#check if merge successfully, if successful, the row number should not change\n",
    "df2.shape\n",
    "df3.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Ticker</th>\n",
       "      <th>SimFinId</th>\n",
       "      <th>Company Name</th>\n",
       "      <th>IndustryId</th>\n",
       "      <th>Sector</th>\n",
       "      <th>Industry</th>\n",
       "      <th>Report Date</th>\n",
       "      <th>Currency</th>\n",
       "      <th>Fiscal Year</th>\n",
       "      <th>Fiscal Period</th>\n",
       "      <th>Publish Date</th>\n",
       "      <th>Shares (Basic)</th>\n",
       "      <th>Shares (Diluted)</th>\n",
       "      <th>Revenue</th>\n",
       "      <th>Cost of Revenue</th>\n",
       "      <th>Gross Profit</th>\n",
       "      <th>Operating Expenses</th>\n",
       "      <th>Selling, General &amp; Administrative</th>\n",
       "      <th>Research &amp; Development</th>\n",
       "      <th>Depreciation &amp; Amortization</th>\n",
       "      <th>Operating Income (Loss)</th>\n",
       "      <th>Non-Operating Income (Loss)</th>\n",
       "      <th>Interest Expense, Net</th>\n",
       "      <th>Pretax Income (Loss), Adj.</th>\n",
       "      <th>Abnormal Gains (Losses)</th>\n",
       "      <th>Pretax Income (Loss)</th>\n",
       "      <th>Income Tax (Expense) Benefit, Net</th>\n",
       "      <th>Income (Loss) from Continuing Operations</th>\n",
       "      <th>Net Extraordinary Gains (Losses)</th>\n",
       "      <th>Net Income</th>\n",
       "      <th>Net Income (Common)</th>\n",
       "      <th>Fiscal Period_b</th>\n",
       "      <th>Shares (Basic)_b</th>\n",
       "      <th>Shares (Diluted)_b</th>\n",
       "      <th>Cash, Cash Equivalents &amp; Short Term Investments</th>\n",
       "      <th>Accounts &amp; Notes Receivable</th>\n",
       "      <th>Inventories</th>\n",
       "      <th>Total Current Assets</th>\n",
       "      <th>Property, Plant &amp; Equipment, Net</th>\n",
       "      <th>Long Term Investments &amp; Receivables</th>\n",
       "      <th>Other Long Term Assets</th>\n",
       "      <th>Total Noncurrent Assets</th>\n",
       "      <th>Total Assets</th>\n",
       "      <th>Payables &amp; Accruals</th>\n",
       "      <th>Short Term Debt</th>\n",
       "      <th>Total Current Liabilities</th>\n",
       "      <th>Long Term Debt</th>\n",
       "      <th>Total Noncurrent Liabilities</th>\n",
       "      <th>Total Liabilities</th>\n",
       "      <th>Share Capital &amp; Additional Paid-In Capital</th>\n",
       "      <th>Treasury Stock</th>\n",
       "      <th>Retained Earnings</th>\n",
       "      <th>Total Equity</th>\n",
       "      <th>Total Liabilities &amp; Equity</th>\n",
       "      <th>Fiscal Period_c</th>\n",
       "      <th>Shares (Basic)_c</th>\n",
       "      <th>Shares (Diluted)_c</th>\n",
       "      <th>Net Income/Starting Line</th>\n",
       "      <th>Depreciation &amp; Amortization_c</th>\n",
       "      <th>Non-Cash Items</th>\n",
       "      <th>Change in Working Capital</th>\n",
       "      <th>Change in Accounts Receivable</th>\n",
       "      <th>Change in Inventories</th>\n",
       "      <th>Change in Accounts Payable</th>\n",
       "      <th>Change in Other</th>\n",
       "      <th>Net Cash from Operating Activities</th>\n",
       "      <th>Change in Fixed Assets &amp; Intangibles</th>\n",
       "      <th>Net Change in Long Term Investment</th>\n",
       "      <th>Net Cash from Acquisitions &amp; Divestitures</th>\n",
       "      <th>Net Cash from Investing Activities</th>\n",
       "      <th>Dividends Paid</th>\n",
       "      <th>Cash from (Repayment of) Debt</th>\n",
       "      <th>Cash from (Repurchase of) Equity</th>\n",
       "      <th>Net Cash from Financing Activities</th>\n",
       "      <th>Net Change in Cash</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>A</td>\n",
       "      <td>45846</td>\n",
       "      <td>AGILENT TECHNOLOGIES INC</td>\n",
       "      <td>106001.0</td>\n",
       "      <td>Healthcare</td>\n",
       "      <td>Medical Diagnostics &amp; Research</td>\n",
       "      <td>2008-10-31</td>\n",
       "      <td>USD</td>\n",
       "      <td>2008.0</td>\n",
       "      <td>FY</td>\n",
       "      <td>2009-10-05</td>\n",
       "      <td>363000000.0</td>\n",
       "      <td>371000000.0</td>\n",
       "      <td>5.774000e+09</td>\n",
       "      <td>-2.578000e+09</td>\n",
       "      <td>3.196000e+09</td>\n",
       "      <td>-2.401000e+09</td>\n",
       "      <td>-1.697000e+09</td>\n",
       "      <td>-704000000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>795000000.0</td>\n",
       "      <td>20000000.0</td>\n",
       "      <td>-10000000.0</td>\n",
       "      <td>815000000.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>815000000.0</td>\n",
       "      <td>-122000000.0</td>\n",
       "      <td>693000000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>693000000.0</td>\n",
       "      <td>693000000.0</td>\n",
       "      <td>Q4</td>\n",
       "      <td>357000000.0</td>\n",
       "      <td>359000000.0</td>\n",
       "      <td>1.429000e+09</td>\n",
       "      <td>770000000.0</td>\n",
       "      <td>646000000.0</td>\n",
       "      <td>3.182000e+09</td>\n",
       "      <td>824000000.0</td>\n",
       "      <td>206000000.0</td>\n",
       "      <td>2.795000e+09</td>\n",
       "      <td>3.825000e+09</td>\n",
       "      <td>7.007000e+09</td>\n",
       "      <td>436000000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.330000e+09</td>\n",
       "      <td>2.125000e+09</td>\n",
       "      <td>3.118000e+09</td>\n",
       "      <td>4.448000e+09</td>\n",
       "      <td>7.416000e+09</td>\n",
       "      <td>-7.470000e+09</td>\n",
       "      <td>2.791000e+09</td>\n",
       "      <td>2.559000e+09</td>\n",
       "      <td>7.007000e+09</td>\n",
       "      <td>FY</td>\n",
       "      <td>363000000.0</td>\n",
       "      <td>371000000.0</td>\n",
       "      <td>693000000.0</td>\n",
       "      <td>201000000.0</td>\n",
       "      <td>41000000.0</td>\n",
       "      <td>-179000000.0</td>\n",
       "      <td>-44000000.0</td>\n",
       "      <td>-14000000.0</td>\n",
       "      <td>-21000000.0</td>\n",
       "      <td>-100000000.0</td>\n",
       "      <td>756000000.0</td>\n",
       "      <td>-140000000.0</td>\n",
       "      <td>150000000.0</td>\n",
       "      <td>-172000000.0</td>\n",
       "      <td>-385000000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>16000000.0</td>\n",
       "      <td>-790000000.0</td>\n",
       "      <td>-788000000.0</td>\n",
       "      <td>-4.210000e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>A</td>\n",
       "      <td>45846</td>\n",
       "      <td>AGILENT TECHNOLOGIES INC</td>\n",
       "      <td>106001.0</td>\n",
       "      <td>Healthcare</td>\n",
       "      <td>Medical Diagnostics &amp; Research</td>\n",
       "      <td>2009-10-31</td>\n",
       "      <td>USD</td>\n",
       "      <td>2009.0</td>\n",
       "      <td>FY</td>\n",
       "      <td>2009-12-21</td>\n",
       "      <td>346000000.0</td>\n",
       "      <td>346000000.0</td>\n",
       "      <td>4.481000e+09</td>\n",
       "      <td>-2.189000e+09</td>\n",
       "      <td>2.292000e+09</td>\n",
       "      <td>-2.245000e+09</td>\n",
       "      <td>-1.603000e+09</td>\n",
       "      <td>-642000000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>47000000.0</td>\n",
       "      <td>-40000000.0</td>\n",
       "      <td>-59000000.0</td>\n",
       "      <td>7000000.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>7000000.0</td>\n",
       "      <td>-38000000.0</td>\n",
       "      <td>-31000000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-31000000.0</td>\n",
       "      <td>-31000000.0</td>\n",
       "      <td>Q4</td>\n",
       "      <td>343000000.0</td>\n",
       "      <td>343000000.0</td>\n",
       "      <td>2.493000e+09</td>\n",
       "      <td>595000000.0</td>\n",
       "      <td>552000000.0</td>\n",
       "      <td>3.961000e+09</td>\n",
       "      <td>845000000.0</td>\n",
       "      <td>163000000.0</td>\n",
       "      <td>2.643000e+09</td>\n",
       "      <td>3.651000e+09</td>\n",
       "      <td>7.612000e+09</td>\n",
       "      <td>307000000.0</td>\n",
       "      <td>1000000.0</td>\n",
       "      <td>1.123000e+09</td>\n",
       "      <td>2.904000e+09</td>\n",
       "      <td>3.975000e+09</td>\n",
       "      <td>5.098000e+09</td>\n",
       "      <td>7.558000e+09</td>\n",
       "      <td>-7.627000e+09</td>\n",
       "      <td>2.760000e+09</td>\n",
       "      <td>2.514000e+09</td>\n",
       "      <td>7.612000e+09</td>\n",
       "      <td>FY</td>\n",
       "      <td>346000000.0</td>\n",
       "      <td>346000000.0</td>\n",
       "      <td>-31000000.0</td>\n",
       "      <td>162000000.0</td>\n",
       "      <td>215000000.0</td>\n",
       "      <td>62000000.0</td>\n",
       "      <td>193000000.0</td>\n",
       "      <td>47000000.0</td>\n",
       "      <td>-7000000.0</td>\n",
       "      <td>-171000000.0</td>\n",
       "      <td>408000000.0</td>\n",
       "      <td>-127000000.0</td>\n",
       "      <td>94000000.0</td>\n",
       "      <td>43000000.0</td>\n",
       "      <td>-4000000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>748000000.0</td>\n",
       "      <td>-86000000.0</td>\n",
       "      <td>647000000.0</td>\n",
       "      <td>1.074000e+09</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Ticker  SimFinId              Company Name  IndustryId      Sector  \\\n",
       "0      A     45846  AGILENT TECHNOLOGIES INC    106001.0  Healthcare   \n",
       "1      A     45846  AGILENT TECHNOLOGIES INC    106001.0  Healthcare   \n",
       "\n",
       "                         Industry Report Date Currency  Fiscal Year  \\\n",
       "0  Medical Diagnostics & Research  2008-10-31      USD       2008.0   \n",
       "1  Medical Diagnostics & Research  2009-10-31      USD       2009.0   \n",
       "\n",
       "  Fiscal Period Publish Date  Shares (Basic)  Shares (Diluted)       Revenue  \\\n",
       "0            FY   2009-10-05     363000000.0       371000000.0  5.774000e+09   \n",
       "1            FY   2009-12-21     346000000.0       346000000.0  4.481000e+09   \n",
       "\n",
       "   Cost of Revenue  Gross Profit  Operating Expenses  \\\n",
       "0    -2.578000e+09  3.196000e+09       -2.401000e+09   \n",
       "1    -2.189000e+09  2.292000e+09       -2.245000e+09   \n",
       "\n",
       "   Selling, General & Administrative  Research & Development  \\\n",
       "0                      -1.697000e+09            -704000000.0   \n",
       "1                      -1.603000e+09            -642000000.0   \n",
       "\n",
       "   Depreciation & Amortization  Operating Income (Loss)  \\\n",
       "0                          NaN              795000000.0   \n",
       "1                          NaN               47000000.0   \n",
       "\n",
       "   Non-Operating Income (Loss)  Interest Expense, Net  \\\n",
       "0                   20000000.0            -10000000.0   \n",
       "1                  -40000000.0            -59000000.0   \n",
       "\n",
       "   Pretax Income (Loss), Adj.  Abnormal Gains (Losses)  Pretax Income (Loss)  \\\n",
       "0                 815000000.0                      0.0           815000000.0   \n",
       "1                   7000000.0                      0.0             7000000.0   \n",
       "\n",
       "   Income Tax (Expense) Benefit, Net  \\\n",
       "0                       -122000000.0   \n",
       "1                        -38000000.0   \n",
       "\n",
       "   Income (Loss) from Continuing Operations  Net Extraordinary Gains (Losses)  \\\n",
       "0                               693000000.0                               NaN   \n",
       "1                               -31000000.0                               NaN   \n",
       "\n",
       "    Net Income  Net Income (Common) Fiscal Period_b  Shares (Basic)_b  \\\n",
       "0  693000000.0          693000000.0              Q4       357000000.0   \n",
       "1  -31000000.0          -31000000.0              Q4       343000000.0   \n",
       "\n",
       "   Shares (Diluted)_b  Cash, Cash Equivalents & Short Term Investments  \\\n",
       "0         359000000.0                                     1.429000e+09   \n",
       "1         343000000.0                                     2.493000e+09   \n",
       "\n",
       "   Accounts & Notes Receivable  Inventories  Total Current Assets  \\\n",
       "0                  770000000.0  646000000.0          3.182000e+09   \n",
       "1                  595000000.0  552000000.0          3.961000e+09   \n",
       "\n",
       "   Property, Plant & Equipment, Net  Long Term Investments & Receivables  \\\n",
       "0                       824000000.0                          206000000.0   \n",
       "1                       845000000.0                          163000000.0   \n",
       "\n",
       "   Other Long Term Assets  Total Noncurrent Assets  Total Assets  \\\n",
       "0            2.795000e+09             3.825000e+09  7.007000e+09   \n",
       "1            2.643000e+09             3.651000e+09  7.612000e+09   \n",
       "\n",
       "   Payables & Accruals  Short Term Debt  Total Current Liabilities  \\\n",
       "0          436000000.0              NaN               1.330000e+09   \n",
       "1          307000000.0        1000000.0               1.123000e+09   \n",
       "\n",
       "   Long Term Debt  Total Noncurrent Liabilities  Total Liabilities  \\\n",
       "0    2.125000e+09                  3.118000e+09       4.448000e+09   \n",
       "1    2.904000e+09                  3.975000e+09       5.098000e+09   \n",
       "\n",
       "   Share Capital & Additional Paid-In Capital  Treasury Stock  \\\n",
       "0                                7.416000e+09   -7.470000e+09   \n",
       "1                                7.558000e+09   -7.627000e+09   \n",
       "\n",
       "   Retained Earnings  Total Equity  Total Liabilities & Equity  \\\n",
       "0       2.791000e+09  2.559000e+09                7.007000e+09   \n",
       "1       2.760000e+09  2.514000e+09                7.612000e+09   \n",
       "\n",
       "  Fiscal Period_c  Shares (Basic)_c  Shares (Diluted)_c  \\\n",
       "0              FY       363000000.0         371000000.0   \n",
       "1              FY       346000000.0         346000000.0   \n",
       "\n",
       "   Net Income/Starting Line  Depreciation & Amortization_c  Non-Cash Items  \\\n",
       "0               693000000.0                    201000000.0      41000000.0   \n",
       "1               -31000000.0                    162000000.0     215000000.0   \n",
       "\n",
       "   Change in Working Capital  Change in Accounts Receivable  \\\n",
       "0               -179000000.0                    -44000000.0   \n",
       "1                 62000000.0                    193000000.0   \n",
       "\n",
       "   Change in Inventories  Change in Accounts Payable  Change in Other  \\\n",
       "0            -14000000.0                 -21000000.0     -100000000.0   \n",
       "1             47000000.0                  -7000000.0     -171000000.0   \n",
       "\n",
       "   Net Cash from Operating Activities  Change in Fixed Assets & Intangibles  \\\n",
       "0                         756000000.0                          -140000000.0   \n",
       "1                         408000000.0                          -127000000.0   \n",
       "\n",
       "   Net Change in Long Term Investment  \\\n",
       "0                         150000000.0   \n",
       "1                          94000000.0   \n",
       "\n",
       "   Net Cash from Acquisitions & Divestitures  \\\n",
       "0                               -172000000.0   \n",
       "1                                 43000000.0   \n",
       "\n",
       "   Net Cash from Investing Activities  Dividends Paid  \\\n",
       "0                        -385000000.0             NaN   \n",
       "1                          -4000000.0             NaN   \n",
       "\n",
       "   Cash from (Repayment of) Debt  Cash from (Repurchase of) Equity  \\\n",
       "0                     16000000.0                      -790000000.0   \n",
       "1                    748000000.0                       -86000000.0   \n",
       "\n",
       "   Net Cash from Financing Activities  Net Change in Cash  \n",
       "0                        -788000000.0       -4.210000e+08  \n",
       "1                         647000000.0        1.074000e+09  "
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "Index(['Ticker', 'SimFinId', 'Company Name', 'IndustryId', 'Sector',\n",
       "       'Industry', 'Report Date', 'Currency', 'Fiscal Year', 'Fiscal Period',\n",
       "       'Publish Date', 'Shares (Basic)', 'Shares (Diluted)', 'Revenue',\n",
       "       'Cost of Revenue', 'Gross Profit', 'Operating Expenses',\n",
       "       'Selling, General & Administrative', 'Research & Development',\n",
       "       'Depreciation & Amortization', 'Operating Income (Loss)',\n",
       "       'Non-Operating Income (Loss)', 'Interest Expense, Net',\n",
       "       'Pretax Income (Loss), Adj.', 'Abnormal Gains (Losses)',\n",
       "       'Pretax Income (Loss)', 'Income Tax (Expense) Benefit, Net',\n",
       "       'Income (Loss) from Continuing Operations',\n",
       "       'Net Extraordinary Gains (Losses)', 'Net Income', 'Net Income (Common)',\n",
       "       'Fiscal Period_b', 'Shares (Basic)_b', 'Shares (Diluted)_b',\n",
       "       'Cash, Cash Equivalents & Short Term Investments',\n",
       "       'Accounts & Notes Receivable', 'Inventories', 'Total Current Assets',\n",
       "       'Property, Plant & Equipment, Net',\n",
       "       'Long Term Investments & Receivables', 'Other Long Term Assets',\n",
       "       'Total Noncurrent Assets', 'Total Assets', 'Payables & Accruals',\n",
       "       'Short Term Debt', 'Total Current Liabilities', 'Long Term Debt',\n",
       "       'Total Noncurrent Liabilities', 'Total Liabilities',\n",
       "       'Share Capital & Additional Paid-In Capital', 'Treasury Stock',\n",
       "       'Retained Earnings', 'Total Equity', 'Total Liabilities & Equity',\n",
       "       'Fiscal Period_c', 'Shares (Basic)_c', 'Shares (Diluted)_c',\n",
       "       'Net Income/Starting Line', 'Depreciation & Amortization_c',\n",
       "       'Non-Cash Items', 'Change in Working Capital',\n",
       "       'Change in Accounts Receivable', 'Change in Inventories',\n",
       "       'Change in Accounts Payable', 'Change in Other',\n",
       "       'Net Cash from Operating Activities',\n",
       "       'Change in Fixed Assets & Intangibles',\n",
       "       'Net Change in Long Term Investment',\n",
       "       'Net Cash from Acquisitions & Divestitures',\n",
       "       'Net Cash from Investing Activities', 'Dividends Paid',\n",
       "       'Cash from (Repayment of) Debt', 'Cash from (Repurchase of) Equity',\n",
       "       'Net Cash from Financing Activities', 'Net Change in Cash'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "(14922, 54)"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "(14922, 75)"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#left join cash flow on previous df \n",
    "df_cashflow_a['Fiscal Year'] = df_cashflow_a[['Fiscal Year']].astype('float')\n",
    "df4 = pd.merge(df3,df_cashflow_a,on = ['Ticker','SimFinId','Fiscal Year','Currency','Report Date','Publish Date'], how = 'left', suffixes=('','_c'))\n",
    "#take a look at the merge data\n",
    "df4.head(2)\n",
    "df4.columns\n",
    "#check if merge successfully, if successful, the row number should not change\n",
    "df3.shape\n",
    "df4.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Prop</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>index</th>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SimFinId</th>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Company Name</th>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Ticker</th>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fiscal Period</th>\n",
       "      <td>98.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Pretax Income (Loss)</th>\n",
       "      <td>98.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Income (Loss) from Continuing Operations</th>\n",
       "      <td>98.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Net Income</th>\n",
       "      <td>98.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Net Income (Common)</th>\n",
       "      <td>98.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Pretax Income (Loss), Adj.</th>\n",
       "      <td>98.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Publish Date</th>\n",
       "      <td>98.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fiscal Year</th>\n",
       "      <td>98.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Currency</th>\n",
       "      <td>98.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Report Date</th>\n",
       "      <td>98.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Operating Income (Loss)</th>\n",
       "      <td>98.94</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Operating Expenses</th>\n",
       "      <td>98.54</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Non-Operating Income (Loss)</th>\n",
       "      <td>97.94</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Total Current Liabilities</th>\n",
       "      <td>97.65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Total Assets</th>\n",
       "      <td>97.65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fiscal Period_b</th>\n",
       "      <td>97.65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Total Liabilities</th>\n",
       "      <td>97.65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Total Liabilities &amp; Equity</th>\n",
       "      <td>97.65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Total Equity</th>\n",
       "      <td>97.64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Total Current Assets</th>\n",
       "      <td>97.62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Gross Profit</th>\n",
       "      <td>97.47</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Revenue</th>\n",
       "      <td>97.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cash, Cash Equivalents &amp; Short Term Investments</th>\n",
       "      <td>97.43</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Total Noncurrent Assets</th>\n",
       "      <td>97.23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Payables &amp; Accruals</th>\n",
       "      <td>97.22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Share Capital &amp; Additional Paid-In Capital</th>\n",
       "      <td>96.82</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Total Noncurrent Liabilities</th>\n",
       "      <td>96.72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Net Cash from Operating Activities</th>\n",
       "      <td>96.43</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fiscal Period_c</th>\n",
       "      <td>96.43</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Net Change in Cash</th>\n",
       "      <td>96.43</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Other Long Term Assets</th>\n",
       "      <td>96.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Shares (Basic)</th>\n",
       "      <td>96.23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Net Cash from Investing Activities</th>\n",
       "      <td>96.14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Net Income/Starting Line</th>\n",
       "      <td>96.11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Net Cash from Financing Activities</th>\n",
       "      <td>96.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Non-Cash Items</th>\n",
       "      <td>96.09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Property, Plant &amp; Equipment, Net</th>\n",
       "      <td>96.01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Change in Working Capital</th>\n",
       "      <td>95.96</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Shares (Diluted)</th>\n",
       "      <td>95.74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Change in Fixed Assets &amp; Intangibles</th>\n",
       "      <td>94.50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Depreciation &amp; Amortization_c</th>\n",
       "      <td>94.49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Retained Earnings</th>\n",
       "      <td>94.32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Industry</th>\n",
       "      <td>94.21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sector</th>\n",
       "      <td>94.21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>IndustryId</th>\n",
       "      <td>94.21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Selling, General &amp; Administrative</th>\n",
       "      <td>94.14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Shares (Basic)_c</th>\n",
       "      <td>93.85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Shares (Diluted)_c</th>\n",
       "      <td>93.39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Income Tax (Expense) Benefit, Net</th>\n",
       "      <td>93.20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Shares (Basic)_b</th>\n",
       "      <td>92.02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Shares (Diluted)_b</th>\n",
       "      <td>91.57</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cost of Revenue</th>\n",
       "      <td>89.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Accounts &amp; Notes Receivable</th>\n",
       "      <td>89.55</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Interest Expense, Net</th>\n",
       "      <td>87.13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cash from (Repurchase of) Equity</th>\n",
       "      <td>86.04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cash from (Repayment of) Debt</th>\n",
       "      <td>84.83</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Long Term Debt</th>\n",
       "      <td>76.73</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Inventories</th>\n",
       "      <td>67.94</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Abnormal Gains (Losses)</th>\n",
       "      <td>65.65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Short Term Debt</th>\n",
       "      <td>65.46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Net Cash from Acquisitions &amp; Divestitures</th>\n",
       "      <td>58.62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Dividends Paid</th>\n",
       "      <td>50.31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Treasury Stock</th>\n",
       "      <td>48.02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Depreciation &amp; Amortization</th>\n",
       "      <td>43.55</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Research &amp; Development</th>\n",
       "      <td>39.55</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Net Change in Long Term Investment</th>\n",
       "      <td>38.23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Long Term Investments &amp; Receivables</th>\n",
       "      <td>29.14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Net Extraordinary Gains (Losses)</th>\n",
       "      <td>21.87</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Change in Other</th>\n",
       "      <td>11.24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Change in Accounts Receivable</th>\n",
       "      <td>10.23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Change in Inventories</th>\n",
       "      <td>8.07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Change in Accounts Payable</th>\n",
       "      <td>7.68</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                   Prop\n",
       "index                                            100.00\n",
       "SimFinId                                         100.00\n",
       "Company Name                                     100.00\n",
       "Ticker                                           100.00\n",
       "Fiscal Period                                     98.97\n",
       "Pretax Income (Loss)                              98.97\n",
       "Income (Loss) from Continuing Operations          98.97\n",
       "Net Income                                        98.97\n",
       "Net Income (Common)                               98.97\n",
       "Pretax Income (Loss), Adj.                        98.97\n",
       "Publish Date                                      98.97\n",
       "Fiscal Year                                       98.97\n",
       "Currency                                          98.97\n",
       "Report Date                                       98.97\n",
       "Operating Income (Loss)                           98.94\n",
       "Operating Expenses                                98.54\n",
       "Non-Operating Income (Loss)                       97.94\n",
       "Total Current Liabilities                         97.65\n",
       "Total Assets                                      97.65\n",
       "Fiscal Period_b                                   97.65\n",
       "Total Liabilities                                 97.65\n",
       "Total Liabilities & Equity                        97.65\n",
       "Total Equity                                      97.64\n",
       "Total Current Assets                              97.62\n",
       "Gross Profit                                      97.47\n",
       "Revenue                                           97.45\n",
       "Cash, Cash Equivalents & Short Term Investments   97.43\n",
       "Total Noncurrent Assets                           97.23\n",
       "Payables & Accruals                               97.22\n",
       "Share Capital & Additional Paid-In Capital        96.82\n",
       "Total Noncurrent Liabilities                      96.72\n",
       "Net Cash from Operating Activities                96.43\n",
       "Fiscal Period_c                                   96.43\n",
       "Net Change in Cash                                96.43\n",
       "Other Long Term Assets                            96.30\n",
       "Shares (Basic)                                    96.23\n",
       "Net Cash from Investing Activities                96.14\n",
       "Net Income/Starting Line                          96.11\n",
       "Net Cash from Financing Activities                96.10\n",
       "Non-Cash Items                                    96.09\n",
       "Property, Plant & Equipment, Net                  96.01\n",
       "Change in Working Capital                         95.96\n",
       "Shares (Diluted)                                  95.74\n",
       "Change in Fixed Assets & Intangibles              94.50\n",
       "Depreciation & Amortization_c                     94.49\n",
       "Retained Earnings                                 94.32\n",
       "Industry                                          94.21\n",
       "Sector                                            94.21\n",
       "IndustryId                                        94.21\n",
       "Selling, General & Administrative                 94.14\n",
       "Shares (Basic)_c                                  93.85\n",
       "Shares (Diluted)_c                                93.39\n",
       "Income Tax (Expense) Benefit, Net                 93.20\n",
       "Shares (Basic)_b                                  92.02\n",
       "Shares (Diluted)_b                                91.57\n",
       "Cost of Revenue                                   89.97\n",
       "Accounts & Notes Receivable                       89.55\n",
       "Interest Expense, Net                             87.13\n",
       "Cash from (Repurchase of) Equity                  86.04\n",
       "Cash from (Repayment of) Debt                     84.83\n",
       "Long Term Debt                                    76.73\n",
       "Inventories                                       67.94\n",
       "Abnormal Gains (Losses)                           65.65\n",
       "Short Term Debt                                   65.46\n",
       "Net Cash from Acquisitions & Divestitures         58.62\n",
       "Dividends Paid                                    50.31\n",
       "Treasury Stock                                    48.02\n",
       "Depreciation & Amortization                       43.55\n",
       "Research & Development                            39.55\n",
       "Net Change in Long Term Investment                38.23\n",
       "Long Term Investments & Receivables               29.14\n",
       "Net Extraordinary Gains (Losses)                  21.87\n",
       "Change in Other                                   11.24\n",
       "Change in Accounts Receivable                     10.23\n",
       "Change in Inventories                              8.07\n",
       "Change in Accounts Payable                         7.68"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#the final data frame is df\n",
    "df = df4.copy()\n",
    "#check for missing value\n",
    "temp = prop_nonmissing(df)\n",
    "temp.sort_values(by = 'Prop',ascending = False)\n",
    "# 只是存用一下这个code，不用理\n",
    "#df_merge2 = df_merge2.drop(df_merge2.columns[df_merge2.columns.str.endswith('right')],axis = 1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Calculate Financial Ratio"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "lists of useful financial ratios to measure financial health\n",
    "liquidity\n",
    "1. \\* current ratio： current assets/current liabiity\n",
    "2. \\* quick ratio: (cash+marketable+ receivable)/current liabilities\n",
    "3. net working capital to assets ratio: (current asset - current liability)/total assets\n",
    "4. Cash ratio: (cash + marketable securities)/current liabilities \n",
    "\n",
    "solvency(leverage measure)\n",
    "1. long-term debt ratio: long-term debt/(long term debt +equity)\n",
    "2. \\* long-term debt-equity ratio: long-term debt/equity.  A downward trend over time in the D/E ratio is a good indicator a company is on increasingly solid financial ground.\n",
    "3. total debt ratio: total liabilities /total assets\n",
    "4. times interest earned : EBIT/ interest expense\n",
    "5. cash coverage ratio : EBIT + depreciation/ interest expense\n",
    "\n",
    "profitability\n",
    "1. return on asset: after tax operating income/total assets\n",
    "2. return on capital: afer tax operating inomce/(long term debt + equity)\n",
    "3. return on equity: after tax operating icnome/equity\n",
    "4. EVA: after_tax operating icnome - (cost of capital * total capitalization). cost of capital data not available\n",
    "operating efficiency\n",
    "\n",
    "1. \\* operating profit margin: EBIT/net sales \n",
    "2. net profit marin: net income/net sales\n",
    "3. asset turover: sales/total assets at start of year\n",
    "4. receivable turover: sales/receivables at the start of year\n",
    "5. inventory turnover: cost of goods sold/inventory at start of year\n",
    "\n",
    "performance measures\n",
    "1. Market Value added: market value of equity - book value of equity\n",
    "2. market to book ratio: Market Market Value of equity / book value of equity \n",
    "3. P/E: Price per share/Earning per share((net income - preferred dividends)/end of year outstanding share)\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.10"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {
    "height": "calc(100% - 180px)",
    "left": "10px",
    "top": "150px",
    "width": "341.325px"
   },
   "toc_section_display": true,
   "toc_window_display": true
  },
  "varInspector": {
   "cols": {
    "lenName": 16,
    "lenType": 16,
    "lenVar": 40
   },
   "kernels_config": {
    "python": {
     "delete_cmd_postfix": "",
     "delete_cmd_prefix": "del ",
     "library": "var_list.py",
     "varRefreshCmd": "print(var_dic_list())"
    },
    "r": {
     "delete_cmd_postfix": ") ",
     "delete_cmd_prefix": "rm(",
     "library": "var_list.r",
     "varRefreshCmd": "cat(var_dic_list()) "
    }
   },
   "types_to_exclude": [
    "module",
    "function",
    "builtin_function_or_method",
    "instance",
    "_Feature"
   ],
   "window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
